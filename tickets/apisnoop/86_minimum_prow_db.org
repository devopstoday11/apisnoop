#+TITLE: 86: create minimal org-file showing creation of db specific for prow bot report
#+TODO: TODO(t) IN-PROGRESS(i) NEED-HELP(!) | TADA(d)

* The Ticket
  [[https://gitlab.ii.coop/cncf/apisnoop/issues/86][gitlab link]]
  #+begin_quote
  Our goal is to have a report that looks at two audit events, and displays whether conformance has gone up or down.
Coverage is defined by the number of stable endpoints hit by tests, and hit by conformance tests.
In addition, this report should show which tests have been added and removed, and the endpoints whose coverage was added or removed.
If the db was needed only to generate this report, it could have far less views than our db now.  So build out a prow-meta.org that runs through the steps of building up this focused db and generating the views for you.
This will lead to an org that will generate a markdown report as well.
  #+end_quote
* [4/7] Process
** TADA Develop Views necessary for this report
   CLOSED: [2019-10-28 Mon 02:27]
   Much of this was done in an exploratory file [[file:~/ii/apisnoop/org/explorations/viewing_differences.org][viewing differences.org]]  
   We developed views that showed change in coverage and the tests that were added and removed.
   These are a good place to start from for our minimal db setup, so next it will be moving them into our
   new tables and views file.
   
** TADA Determine which existing views are needed 
   CLOSED: [2019-10-28 Mon 02:34]
   :LOGBOOK:
   CLOCK: [2019-10-28 Mon 02:33]--[2019-10-28 Mon 02:34] =>  0:01
   :END:
   Looking through viewing_differences.org, the views use these existing views or tables: 
   - stable_endpoint_stats
   - audit_event
   
   based on [[file:~/ii/apisnoop/org/tables_and_views.org][tables_and_views.org]], these depend on: 
   - endpoint_coverage
   - api_operation
   - bucket_job_swagger
   - api_operation
   - api_operation_material
   - api_operation_parameter_material
   - raw_audit_event
  
These should be all we need in our new tables_and_views file. And we might even be able to skip the api_operation, since it's a trackable duplicate of api_operation_material, meant for hasura to be able to view.  I don't think this is not a requirement for our minimal db.
** TADA Create a tables-and-views_bot.org file
   CLOSED: [2019-10-28 Mon 04:02]
   I made this file at same level of the current tables_and_views.
   You can review it here: [[file:~/ii/apisnoop/org/tables_and_views_bot.org][tables_and_views_bot.org]] 
** TADA Create a meta_bot.org file
   CLOSED: [2019-10-28 Mon 04:02]
   You can review this file here: [[file:~/ii/apisnoop/org/meta_bot.org][meta_bot.org]]  
   It's nearly identical, just changing which tables_and_views file we tangle.  Everything else should prolly work?
** NEED-HELP Confirm you can create a minimal db from meta_bot.org and existing tables_and_views
   - State "NEED-HELP"  from "TODO"       [2019-10-28 Mon 04:02]
I am able to create the db and migrate all the tables, and am able to get the swagger.jsons' up, but am having issues bringing up the audit events

I am getting the error of 'ipdb module not found', but am uncertain whether ipdb needed to be installed within postgres, or whether it needed to be on our docker.  I tried to look up how to import packages for plpython, but couldn't parse how to do it for ipdb beyond whatis already in our code, and am uncertain which/where the docker container is to install ipdb (or rather, how to do it appropriately, so it's reproducible).

The catch is that we are only trying to install ipdb when we hit some error exception, so even if i were able to install it correctly, it would just help me see an error we are reaching.  This felt like a good stopping point to get some python/docker help tomorrow.
** TODO Add new views to tables and views
** TODO confirm meta can be brought down and up with new views.
* Conclusion
* Footnotes

