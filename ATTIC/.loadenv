# .loadenv
# #+NAME: .loadenv

# If we are on sharing.io, use UID based *_PORTs
if [ $(hostname) = "sharing.io" ]
then
    # Overwriting .env based on \*-${USER}.sharing.io
    echo Using sharing.io setup 1>&2
(
    # UID based *_PORT used to expose per user postgresql,hasura, and pgadmin ports on same box
    if [ "$KOMPOSE" = "true" ]
    then
            echo Using kompose https://$USER-hasura.apisnoop.io 1>&2
            echo PGPORT=5432
            echo HASURA_PORT=8080
            echo endpoint: https://$USER-hasura.apisnoop.io > $PWD/hasura/config.yaml
    else
            echo Using docker-compose https://$USER-hasura.sharing.io 1>&2
            echo PGPORT=$(id -u)1
            echo HASURA_PORT=$(id -u)0
            echo endpoint: https://$USER-hasura.sharing.io > $PWD/hasura/config.yaml
    fi

    # for running in docker-compose, different localhost:port per user id same
    # for running in docker-compose, different localhost:port per user id same
    # echo PG_CONTAINER_PORT=$PGPORT
    # for running in kompose
    echo PGADMIN_PORT=$(id -u)2
    echo PGHOST=localhost
    echo PGDATABASE=apisnoop
    echo PGUSER=apisnoop
    echo PGPASS=s3cr3tsauc3
    echo PGPASSFILE=$PWD/pgpass
    echo COMPOSE_PROJECT_NAME=apisnoop_$USER
    TAG=$(TZ='Pacific/Auckland'; export TZ ; date +%F-%H-%M)
    echo TAG=$TAG
    # echo HASURA_IMAGE=raiinbow/hasura:$TAG
    # echo POSTGRES_IMAGE=raiinbow/postgres:$TAG
    # echo $PGHOST:$PGPORT:$PGDATABASE:$PGUSER:$PGPASS > $PWD/pgpass
    echo GOOGLE_APPLICATION_CREDENTIALS=$HOME/.gcreds.json
    echo GKS_ZONE="australia-southeast1-a"
    echo GCS_CLUSTER="single-node-cluster"
    echo APISNOOP_NAMESPACE="apisnoop-$USER"
    echo TRAEFIK_NAMESPACE="kube-system"
    echo TRAEFIK_DEPLOYMENT="ii-traefik"
    echo SQLITE_DB=$PWD/sqlite/raiinbow.db
) > .env
    export $(grep -v '^#' .env | xargs -d '\n')
    gcloud container clusters get-credentials ${GCS_CLUSTER} --zone ${GKS_ZONE} 2> /dev/null || echo cluster gcreds error
    kubectl config set-context $(kubectl config current-context) --namespace=${APISNOOP_NAMESPACE} 2>&1 > /dev/null
else
    cp .env_sample .env
    echo SQLITE_DB=$PWD/raiinbow.db >> .env
    cp hasura/config_sample.yaml hasura/config.yaml
    export $(grep -v '^#' .env | xargs -d '\n')
fi

PGPASSFILE=$(pwd)/pgpass
echo $PGHOST:$PGPORT:$PGDATABASE:$PGUSER:$PGPASS > $PGPASSFILE
chmod 600 $PGPASSFILE
export CONN="host=127.0.0.1 port=$PGPORT user=$PGUSER dbname=$PGDATABASE password=$PGPASS sslmode=disable client_encoding=UTF8"
